#version 330 core

layout (location = 0) in vec3 aPos;

uniform int blockNumbers[16];

out vec3 blockColor;

void main(){
	int index = gl_VertexID / 4;
	if(blockNumbers[index] % 2048 == 0){
		blockColor = vec3(0.4, 0.2, 0.1);
	}
	else if(blockNumbers[index] % 1024 == 0){
		blockColor = vec3(0.9, 0.2, 0.9);
	}
	else if(blockNumbers[index] % 512 == 0){
		blockColor = vec3(0.3, 0.2, 0.9);
	}
	else if(blockNumbers[index] % 256 == 0){
		blockColor = vec3(0.3, 0.7, 0.5);
	}
	else if(blockNumbers[index] % 128 == 0){
		blockColor = vec3(1.0, 0.5, 0.5);
	}
	else if(blockNumbers[index] % 64 == 0){
		blockColor = vec3(1.0, 0.0, 0.0);
	}
	else if(blockNumbers[index] % 32 == 0){
		blockColor = vec3(0.0, 1.0, 0.0);
	}
	else if(blockNumbers[index] % 16 == 0){
		blockColor = vec3(0.0, 0.0, 1.0);
	}
	else if(blockNumbers[index] % 8 == 0){
		blockColor = vec3(0.0, 0.0, 0.0);
	}
	else if(blockNumbers[index] % 4 == 0){
		blockColor = vec3(0.5, 0.5, 0.5);
	}
	else if(blockNumbers[index] % 2 == 0){
		blockColor = vec3(1.0, 1.0, 1.0);
	}

	gl_Position = vec4(aPos, 1.0);
}
